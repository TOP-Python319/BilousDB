Ссылки по теме:
https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA (что такое тип данных стек)
https://ru.wikipedia.org/wiki/LIFO (что такое принцип LIFO)


=========================================
В этом задании вам предстоит реализовать свой стек (stack) — это упорядоченная коллекция элементов, 
организованная по принципу LIFO (англ. last in — first out, «последним пришёл — первым вышел»).

Ваша задача реализовать класс Stack, у которого есть:

  метод __init__() создаёт новый пустой стек. 
    Параметры данный метод не принимает.
    Создает атрибут экземпляра values, 
    где будут в дальнейшем храниться элементы стека в виде списка (list), 
    изначально при инициализации задайте значение атрибуту values, равное пустому списку;
 
  метод push(item) добавляет новый элемент на вершину стека, метод ничего не возвращает;
 
  метод pop() удаляет верхний элемент из стека.
    Параметры не требуются, метод возвращает элемент.
    Стек изменяется.
    Если пытаемся удалить элемент из пустого списка, 
    необходимо вывести сообщение "Empty Stack";
 
  метод peek() возвращает верхний элемент стека, но не удаляет его.
    Параметры не требуются, стек не модифицируется.
    Если элементов в стеке нет, 
    распечатайте сообщение "Empty Stack",
    верните None после этого;
 
  метод is_empty() проверяет стек на пустоту.
    Параметры не требуются, возвращает булево значение.
 
  метод size() возвращает количество элементов в стеке.
    Параметры не требуются, тип результата — целое число.


=========================================
Пример работы с экземпляром класса Stack:
stack = Stack()
stack.push(10)
stack.push(12)
stack.push(14)
stack.size()
# >>>: 3
stack.is_empty()
# >>>: False
stack.peek()
# >>>: 14
stack.peek()
# >>>: 14
stack.pop()
# >>>: 14
stack.size()
# >>>: 2
stack.pop()
# >>>: 12
stack.pop()
# >>>: 10
stack.pop()
# >>>: Empty Stack
stack.peek()
# >>>: Empty Stack
stack.size()
# >>>: 0
stack.is_empty()
# >>>: True