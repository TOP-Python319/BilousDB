Перед выполнением можете сделать резервную копию своей БД, чтобы не бояться потерять данные.

### Create (Создание)
1. Создайте новую карточку с вопросом "Что такое Django?" и ответом "Django — это высокоуровневый веб-фреймворк на Python."
2. Создайте карточку с вопросом "Как установить Django?" и ответом "Для установки Django используйте команду `pip install django`."
3. Создайте 10 карточек с вопросами "Вопрос 1", "Вопрос 2", ..., "Вопрос 10" и соответствующими ответами "Ответ 1", "Ответ 2", ..., "Ответ 10".
4. Создайте карточку с вопросом "Как работает ORM в Django?" и ответом "ORM в Django позволяет взаимодействовать с базой данных через объекты Python."

### Read (Чтение)
5. Получите все карточки из базы данных.
6. Получите карточку с вопросом "Что такое Django?".
7. Получите все карточки, у которых количество просмотров (views) больше 10.
8. Получите все карточки, у которых количество добавлений (adds) равно 0.
9. Получите все карточки, созданные в текущем году.
10. Получите все карточки, созданные в текущем месяце.
11. Получите все карточки, созданные в текущем дне.

### Update (Обновление)
12. Обновите количество просмотров (views) для карточки с вопросом "Что такое Django?" на 10.
13. Увеличьте количество добавлений (adds) для всех карточек на 1.
14. Обновите ответ для карточки с вопросом "Как работает ORM в Django?" на "ORM в Django позволяет взаимодействовать с базой данных через объекты Python, что упрощает работу с данными."
15. Обновите дату загрузки (upload_date) для всех карточек на текущую дату и время.
16. Обновите количество просмотров (views) для всех карточек, у которых количество добавлений (adds) больше 5, на 100.

### Delete (Удаление)
17. Удалите все карточки, у которых вопрос содержит слово "установить".
18. Удалите все карточки, созданные в прошлом году.
19. Удалите все карточки, у которых количество добавлений (adds) меньше 1.
20. Удалите все карточки, у которых вопрос начинается с "Вопрос".
21. Удалите карточку с вопросом "Что такое Django?".

### Lookups (Поиск)
22. Найдите все карточки, у которых вопрос содержит слово "Django".
23. Найдите все карточки, у которых ответ содержит слово "Python".
24. Найдите все карточки, у которых количество просмотров (views) больше 50 и количество добавлений (adds) больше 10.
25. Найдите все карточки, у которых дата загрузки (upload_date) позже текущей даты на 1 месяц.
26. Найдите все карточки, у которых вопрос начинается с "Как" и ответ содержит слово "ORM".

Эти задачи помогут вам практиковаться в работе с моделью `Card` и использовании различных методов Django ORM для выполнения операций CRUD и поиска данных.